Wymagania do tej gry są następujące:

# (0.25 pkt) Plansza składa się z siedmiu kolumn i sześciu wierszy. Początkowo wszystkie pola są puste.
# (0.5 pkt )Gracze wrzucają od góry krążki w kolumny. Jeśli kolumna jest pusta, wrzucony krążek spada w dół planszy. Krążki dodane do tej kolumny będą się znajdować nad tymi wcześniej wrzuconymi.
# (0.5 pkt) Gra jest przeznaczona dla dwóch osób. Każdemu graczowi jest przypisany jeden kolor. Jedna osoba używa krążków czerwonych, a druga zielonych. Gracze wykonują ruchy na zmianę i za każdym razem wrzucają jeden krążek.
# (1 pkt) Program ma informować o zdarzeniach i błędach w grze. Dane wyjściowe powinny przedsta- wiać stan na planszy po każdym ruchu.
# (0.25 pkt) Gdy nie można dodać kolejnych krążków. Gra kończy się remisem.
# (0.5 pkt) Jeśli gracz dodał krążek i w ten sposób połączył więcej niż trzy krążki w swoim kolorze przylegające do siebie w pionowej linii, wygrywa.
# (0.5 pkt) To samo dzieje się, jeśli połączono krążki w linii poziomej.
# (0.5 pkt) To samo dzieje się, jeśli połączono krążki po stosie.
# (1 pkt) Tworzenie list rankingowych graczy: imię, punktacja, ilość wygranych itd
# (1 pkt) Zakładamy możliwość cofania się ruchów gracza



Pod ocenę będą brane pod uwagę następujące elementy:

# (6 pkt) Uwzględnienie powyższych wymagań.
# (7 pkt) Przypadki testowe.
# (1 pkt) Użycie różnych asercji przy wykorzystaniu różnych modułów. Co najmniej 9 różnych asercji.
# (2 pkt) Uwzględnienie wyjątków.
# (3 pkt) Zastosowanie biblioteki PyHamcrest oraz assertpy. Stosujemy każdy moduł.
# (1 pkt) Testy przy użyciu modułu PyHamcrest
# (1 pkt) Testy przy użyciu modułu assertpy
# (1 pkt) Napisanie własnego matchera i przetestowanie go w aplikacji
# (1 pkt) Użycie narzędzia nose
# (1 pkt) Napisanie testów za pomocą DocTest
# (2 pkt) Pokrycie kodu. Liczba punktów w zależności od otrzymanego pokrycia.
# (2 pkt) Styl kodu oraz testów.
# (3 pkt) Zastosowanie metodyki TDD.
# (1 pkt) Zastosowanie testów parametrycznych (poprzez różne rodzaje)
# (1 pkt) Zastosowanie testów parametrycznych przy użyciu plików testowych.



Ponadto dodatkowo pod uwagę będą brane następujące elementy:

# (1 pkt) Rozszerzenie planszy na m×n
# (1 pkt) Dodanie możliwości zapisu gry do pliku
(1 pkt) Użycie pytest
(2 pkt) Inne rzeczy nie pokazane na zajęciach

# nose2 --with-coverage --coverage-report html